# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- script:
    echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: Bash@3
  displayName: VMCreate
  inputs:
    targetType: 'inline'
    script: |
      #!/bin/bash
      az login 
      az group create --name AResourceGroup --location eastasia
      az acr create --resource-group AResourceGroup --name ajjuacrrepo --sku Standard --location eastasia
      az aks create --resource-group AResourceGroup --name ajjuAKSCluster --node-count 2 --enable-addons monitoring --generate-ssh-keys
      az aks show --name ajjuAKSCluster --resource-group AResourceGroup
      az aks get-credentials --resource-group AResourceGroup --name ajjuAKSCluster --overwrite-existing

- task: Docker@2
  displayName: Build an image
  inputs:
    repository: '$(AWS_ECR_REPOSITORY_URI)'
    command: 'build'
    Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
    buildContext: '$(System.DefaultWorkingDirectory)'
    tags: |
          $(Build.BuildId)
- task: CopyFiles@2
  inputs:
    Contents: 'eks-deploy-from-ecr.yaml'
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    
- task: Kubernetes@1
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'Pay-As-You-Go(af5a6fb3-b792-4f0e-aa58-7cf18b9cad30)'
    azureResourceGroup: 'AResourceGroup'
    kubernetesCluster: 'ajjuAKSCluster'
    useClusterAdmin: true
    namespace: 'default'
    command: 'apply'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'